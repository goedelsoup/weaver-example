/** DO NOT EDIT -- THIS FILE HAS BEEN GENERATED BY WEAVER */


/**
 * The CPU architecture the host system is running on.

 *
 * 
 *
 * 
 */
export const HOST_ARCH = /** @type {const} */ 'host.arch';

/**
 * The amount of level 2 memory cache available to the processor (in Bytes).

 *
 * 
 *
 * * @example [12288000]
 *
 */
export const HOST_CPU_CACHE_L2_SIZE = /** @type {const} */ 'host.cpu.cache.l2.size';

/**
 * Family or generation of the CPU.

 *
 * 
 *
 * * @example ["6", "PA-RISC 1.1e"]
 *
 */
export const HOST_CPU_FAMILY = /** @type {const} */ 'host.cpu.family';

/**
 * Model identifier. It provides more granular information about the CPU, distinguishing it from other CPUs within the same family.

 *
 * 
 *
 * * @example ["6", "9000/778/B180L"]
 *
 */
export const HOST_CPU_MODEL_ID = /** @type {const} */ 'host.cpu.model.id';

/**
 * Model designation of the processor.

 *
 * 
 *
 * * @example ["11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz"]
 *
 */
export const HOST_CPU_MODEL_NAME = /** @type {const} */ 'host.cpu.model.name';

/**
 * Stepping or core revisions.

 *
 * 
 *
 * * @example ["1", "r1p1"]
 *
 */
export const HOST_CPU_STEPPING = /** @type {const} */ 'host.cpu.stepping';

/**
 * Processor manufacturer identifier. A maximum 12-character string.

 *
 * 
 *
 * * @example ["GenuineIntel"]
 *
 */
export const HOST_CPU_VENDOR_ID = /** @type {const} */ 'host.cpu.vendor.id';

/**
 * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.

 *
 * 
 *
 * * @example ["fdbf79e8af94cb7f9e8df36789187052"]
 *
 */
export const HOST_ID = /** @type {const} */ 'host.id';

/**
 * VM image ID or host OS image ID. For Cloud, this value is from the provider.

 *
 * 
 *
 * * @example ["ami-07b06b442921831e5"]
 *
 */
export const HOST_IMAGE_ID = /** @type {const} */ 'host.image.id';

/**
 * Name of the VM image or OS install the host was instantiated from.

 *
 * 
 *
 * * @example ["infra-ami-eks-worker-node-7d4ec78312", "CentOS-8-x86_64-1905"]
 *
 */
export const HOST_IMAGE_NAME = /** @type {const} */ 'host.image.name';

/**
 * The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).

 *
 * 
 *
 * * @example ["0.1"]
 *
 */
export const HOST_IMAGE_VERSION = /** @type {const} */ 'host.image.version';

/**
 * Available IP addresses of the host, excluding loopback interfaces.

 *
 * 
 *
 * * @example [["192.168.1.140", "fe80::abc2:4a28:737a:609e"]]
 *
 */
export const HOST_IP = /** @type {const} */ 'host.ip';

/**
 * Available MAC addresses of the host, excluding loopback interfaces.

 *
 * 
 *
 * * @example [["AC-DE-48-23-45-67", "AC-DE-48-23-45-67-01-9F"]]
 *
 */
export const HOST_MAC = /** @type {const} */ 'host.mac';

/**
 * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.

 *
 * 
 *
 * * @example ["opentelemetry-test"]
 *
 */
export const HOST_NAME = /** @type {const} */ 'host.name';

/**
 * Type of host. For Cloud, this must be the machine type.

 *
 * 
 *
 * * @example ["n1-standard-1"]
 *
 */
export const HOST_TYPE = /** @type {const} */ 'host.type';
