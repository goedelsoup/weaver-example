/** DO NOT EDIT -- THIS FILE HAS BEEN GENERATED BY WEAVER */


/**
 * The name of the cluster.

 *
 * 
 *
 * * @example ["opentelemetry-cluster"]
 *
 */
export const K8S_CLUSTER_NAME = /** @type {const} */ 'k8s.cluster.name';

/**
 * A pseudo-ID for the cluster, set to the UID of the `kube-system` namespace.

 *
 * 
 *
 * * @example ["218fc5a9-a5f1-4b54-aa05-46717d0ab26d"]
 *
 */
export const K8S_CLUSTER_UID = /** @type {const} */ 'k8s.cluster.uid';

/**
 * The name of the Container from Pod specification, must be unique within a Pod. Container runtime usually uses different globally unique name (`container.name`).

 *
 * 
 *
 * * @example ["redis"]
 *
 */
export const K8S_CONTAINER_NAME = /** @type {const} */ 'k8s.container.name';

/**
 * Number of times the container was restarted. This attribute can be used to identify a particular container (running or stopped) within a container spec.

 *
 * 
 *
 * 
 */
export const K8S_CONTAINER_RESTART_COUNT = /** @type {const} */ 'k8s.container.restart_count';

/**
 * Last terminated reason of the Container.

 *
 * 
 *
 * * @example ["Evicted", "Error"]
 *
 */
export const K8S_CONTAINER_STATUS_LAST_TERMINATED_REASON = /** @type {const} */ 'k8s.container.status.last_terminated_reason';

/**
 * The name of the CronJob.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_CRONJOB_NAME = /** @type {const} */ 'k8s.cronjob.name';

/**
 * The UID of the CronJob.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_CRONJOB_UID = /** @type {const} */ 'k8s.cronjob.uid';

/**
 * The name of the DaemonSet.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_DAEMONSET_NAME = /** @type {const} */ 'k8s.daemonset.name';

/**
 * The UID of the DaemonSet.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_DAEMONSET_UID = /** @type {const} */ 'k8s.daemonset.uid';

/**
 * The name of the Deployment.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_DEPLOYMENT_NAME = /** @type {const} */ 'k8s.deployment.name';

/**
 * The UID of the Deployment.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_DEPLOYMENT_UID = /** @type {const} */ 'k8s.deployment.uid';

/**
 * The name of the Job.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_JOB_NAME = /** @type {const} */ 'k8s.job.name';

/**
 * The UID of the Job.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_JOB_UID = /** @type {const} */ 'k8s.job.uid';

/**
 * The name of the namespace that the pod is running in.

 *
 * 
 *
 * * @example ["default"]
 *
 */
export const K8S_NAMESPACE_NAME = /** @type {const} */ 'k8s.namespace.name';

/**
 * The phase of the K8s namespace.

 *
 * 
 *
 * * @example ["active", "terminating"]
 *
 */
export const K8S_NAMESPACE_PHASE = /** @type {const} */ 'k8s.namespace.phase';

/**
 * The name of the Node.

 *
 * 
 *
 * * @example ["node-1"]
 *
 */
export const K8S_NODE_NAME = /** @type {const} */ 'k8s.node.name';

/**
 * The UID of the Node.

 *
 * 
 *
 * * @example ["1eb3a0c6-0477-4080-a9cb-0cb7db65c6a2"]
 *
 */
export const K8S_NODE_UID = /** @type {const} */ 'k8s.node.uid';

/**
 * The annotation key-value pairs placed on the Pod, the `<key>` being the annotation name, the value being the annotation value.

 *
 * 
 *
 * * @example ["k8s.pod.annotation.kubernetes.io/enforce-mountable-secrets=true", "k8s.pod.annotation.mycompany.io/arch=x64", "k8s.pod.annotation.data="]
 *
 */
export const K8S_POD_ANNOTATION = /** @type {const} */ 'k8s.pod.annotation';

/**
 * The label key-value pairs placed on the Pod, the `<key>` being the label name, the value being the label value.

 *
 * 
 *
 * * @example ["k8s.pod.label.app=my-app", "k8s.pod.label.mycompany.io/arch=x64", "k8s.pod.label.data="]
 *
 */
export const K8S_POD_LABEL = /** @type {const} */ 'k8s.pod.label';

/**
 * The name of the Pod.

 *
 * 
 *
 * * @example ["opentelemetry-pod-autoconf"]
 *
 */
export const K8S_POD_NAME = /** @type {const} */ 'k8s.pod.name';

/**
 * The UID of the Pod.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_POD_UID = /** @type {const} */ 'k8s.pod.uid';

/**
 * The name of the ReplicaSet.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_REPLICASET_NAME = /** @type {const} */ 'k8s.replicaset.name';

/**
 * The UID of the ReplicaSet.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_REPLICASET_UID = /** @type {const} */ 'k8s.replicaset.uid';

/**
 * The name of the StatefulSet.

 *
 * 
 *
 * * @example ["opentelemetry"]
 *
 */
export const K8S_STATEFULSET_NAME = /** @type {const} */ 'k8s.statefulset.name';

/**
 * The UID of the StatefulSet.

 *
 * 
 *
 * * @example ["275ecb36-5aa8-4c2a-9c47-d8bb681b9aff"]
 *
 */
export const K8S_STATEFULSET_UID = /** @type {const} */ 'k8s.statefulset.uid';

/**
 * The name of the K8s volume.

 *
 * 
 *
 * * @example ["volume0"]
 *
 */
export const K8S_VOLUME_NAME = /** @type {const} */ 'k8s.volume.name';

/**
 * The type of the K8s volume.

 *
 * 
 *
 * * @example ["emptyDir", "persistentVolumeClaim"]
 *
 */
export const K8S_VOLUME_TYPE = /** @type {const} */ 'k8s.volume.type';
