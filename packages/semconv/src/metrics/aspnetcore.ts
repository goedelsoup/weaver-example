/** DO NOT EDIT -- THIS FILE HAS BEEN GENERATED BY WEAVER */


/**
 * Number of exceptions caught by exception handling middleware.
 *
 * Instrument: counter
 * Unit: {exception}
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.Diagnostics`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = /** @type {const} */ 'aspnetcore.diagnostics.exceptions';

/**
 * Number of requests that are currently active on the server that hold a rate limiting lease.
 *
 * Instrument: updowncounter
 * Unit: {request}
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = /** @type {const} */ 'aspnetcore.rate_limiting.active_request_leases';

/**
 * Number of requests that are currently queued, waiting to acquire a rate limiting lease.
 *
 * Instrument: updowncounter
 * Unit: {request}
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = /** @type {const} */ 'aspnetcore.rate_limiting.queued_requests';

/**
 * The time the request spent in a queue waiting to acquire a rate limiting lease.
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = /** @type {const} */ 'aspnetcore.rate_limiting.request.time_in_queue';

/**
 * The duration of rate limiting lease held by requests on the server.
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = /** @type {const} */ 'aspnetcore.rate_limiting.request_lease.duration';

/**
 * Number of requests that tried to acquire a rate limiting lease.
 *
 * Instrument: counter
 * Unit: {request}
 *
 * 
 *
 * * @remarks Requests could be:

* Rejected by global or endpoint rate limiting policies
* Canceled while waiting for the lease.

Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_RATE_LIMITING_REQUESTS = /** @type {const} */ 'aspnetcore.rate_limiting.requests';

/**
 * Number of requests that were attempted to be matched to an endpoint.
 *
 * Instrument: counter
 * Unit: {match_attempt}
 *
 * 
 *
 * * @remarks Meter name: `Microsoft.AspNetCore.Routing`; Added in: ASP.NET Core 8.0

 *
 */
export const ASPNETCORE_ROUTING_MATCH_ATTEMPTS = /** @type {const} */ 'aspnetcore.routing.match_attempts';
