/** DO NOT EDIT -- THIS FILE HAS BEEN GENERATED BY WEAVER */


/**
 * The number of connections that are currently in state described by the `state` attribute
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_COUNT = /** @type {const} */ 'db.client.connection.count';

/**
 * The time it took to create a new connection
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_CREATE_TIME = /** @type {const} */ 'db.client.connection.create_time';

/**
 * The maximum number of idle open connections allowed
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_IDLE_MAX = /** @type {const} */ 'db.client.connection.idle.max';

/**
 * The minimum number of idle open connections allowed
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_IDLE_MIN = /** @type {const} */ 'db.client.connection.idle.min';

/**
 * The maximum number of open connections allowed
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_MAX = /** @type {const} */ 'db.client.connection.max';

/**
 * The number of current pending requests for an open connection
 *
 * Instrument: updowncounter
 * Unit: {request}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_PENDING_REQUESTS = /** @type {const} */ 'db.client.connection.pending_requests';

/**
 * The number of connection timeouts that have occurred trying to obtain a connection from the pool
 *
 * Instrument: counter
 * Unit: {timeout}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_TIMEOUTS = /** @type {const} */ 'db.client.connection.timeouts';

/**
 * The time between borrowing a connection and returning it to the pool
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_USE_TIME = /** @type {const} */ 'db.client.connection.use_time';

/**
 * The time it took to obtain an open connection from the pool
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * 
 */
export const DB_CLIENT_CONNECTION_WAIT_TIME = /** @type {const} */ 'db.client.connection.wait_time';

/**
 * Deprecated, use `db.client.connection.create_time` instead. Note: the unit also changed from `ms` to `s`.
 *
 * Instrument: histogram
 * Unit: ms
 *
 * * @deprecated Replaced by `db.client.connection.create_time`. Note: the unit also changed from `ms` to `s`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_CREATE_TIME = /** @type {const} */ 'db.client.connections.create_time';

/**
 * Deprecated, use `db.client.connection.idle.max` instead.
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * * @deprecated Replaced by `db.client.connection.idle.max`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_IDLE_MAX = /** @type {const} */ 'db.client.connections.idle.max';

/**
 * Deprecated, use `db.client.connection.idle.min` instead.
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * * @deprecated Replaced by `db.client.connection.idle.min`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_IDLE_MIN = /** @type {const} */ 'db.client.connections.idle.min';

/**
 * Deprecated, use `db.client.connection.max` instead.
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * * @deprecated Replaced by `db.client.connection.max`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_MAX = /** @type {const} */ 'db.client.connections.max';

/**
 * Deprecated, use `db.client.connection.pending_requests` instead.
 *
 * Instrument: updowncounter
 * Unit: {request}
 *
 * * @deprecated Replaced by `db.client.connection.pending_requests`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_PENDING_REQUESTS = /** @type {const} */ 'db.client.connections.pending_requests';

/**
 * Deprecated, use `db.client.connection.timeouts` instead.
 *
 * Instrument: counter
 * Unit: {timeout}
 *
 * * @deprecated Replaced by `db.client.connection.timeouts`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_TIMEOUTS = /** @type {const} */ 'db.client.connections.timeouts';

/**
 * Deprecated, use `db.client.connection.count` instead.
 *
 * Instrument: updowncounter
 * Unit: {connection}
 *
 * * @deprecated Replaced by `db.client.connection.count`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_USAGE = /** @type {const} */ 'db.client.connections.usage';

/**
 * Deprecated, use `db.client.connection.use_time` instead. Note: the unit also changed from `ms` to `s`.
 *
 * Instrument: histogram
 * Unit: ms
 *
 * * @deprecated Replaced by `db.client.connection.use_time`. Note: the unit also changed from `ms` to `s`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_USE_TIME = /** @type {const} */ 'db.client.connections.use_time';

/**
 * Deprecated, use `db.client.connection.wait_time` instead. Note: the unit also changed from `ms` to `s`.
 *
 * Instrument: histogram
 * Unit: ms
 *
 * * @deprecated Replaced by `db.client.connection.wait_time`. Note: the unit also changed from `ms` to `s`.
 *
 *
 * 
 */
export const DB_CLIENT_CONNECTIONS_WAIT_TIME = /** @type {const} */ 'db.client.connections.wait_time';

/**
 * Deprecated, use `azure.cosmosdb.client.active_instance.count` instead.
 *
 * Instrument: updowncounter
 * Unit: {instance}
 *
 * * @deprecated Replaced by `azure.cosmosdb.client.active_instance.count`.
 *
 *
 * 
 */
export const DB_CLIENT_COSMOSDB_ACTIVE_INSTANCE_COUNT = /** @type {const} */ 'db.client.cosmosdb.active_instance.count';

/**
 * Deprecated, use `azure.cosmosdb.client.operation.request_charge` instead.
 *
 * Instrument: histogram
 * Unit: {request_unit}
 *
 * * @deprecated Replaced by `azure.cosmosdb.client.operation.request_charge`.
 *
 *
 * 
 */
export const DB_CLIENT_COSMOSDB_OPERATION_REQUEST_CHARGE = /** @type {const} */ 'db.client.cosmosdb.operation.request_charge';

/**
 * Duration of database client operations.
 *
 * Instrument: histogram
 * Unit: s
 *
 * 
 *
 * * @remarks Batch operations SHOULD be recorded as a single operation.

 *
 */
export const DB_CLIENT_OPERATION_DURATION = /** @type {const} */ 'db.client.operation.duration';

/**
 * The actual number of records returned by the database operation.
 *
 * Instrument: histogram
 * Unit: {row}
 *
 * 
 *
 * 
 */
export const DB_CLIENT_RESPONSE_RETURNED_ROWS = /** @type {const} */ 'db.client.response.returned_rows';
