/** DO NOT EDIT -- THIS FILE HAS BEEN GENERATED BY WEAVER */


/**
 * Number of times the process has been context switched.
 *
 * Instrument: counter
 * Unit: {count}
 *
 * 
 *
 * 
 */
export const PROCESS_CONTEXT_SWITCHES = /** @type {const} */ 'process.context_switches';

/**
 * Total CPU seconds broken down by different states.
 *
 * Instrument: counter
 * Unit: s
 *
 * 
 *
 * 
 */
export const PROCESS_CPU_TIME = /** @type {const} */ 'process.cpu.time';

/**
 * Difference in process.cpu.time since the last measurement, divided by the elapsed time and number of CPUs available to the process.
 *
 * Instrument: gauge
 * Unit: 1
 *
 * 
 *
 * 
 */
export const PROCESS_CPU_UTILIZATION = /** @type {const} */ 'process.cpu.utilization';

/**
 * Disk bytes transferred.
 *
 * Instrument: counter
 * Unit: By
 *
 * 
 *
 * 
 */
export const PROCESS_DISK_IO = /** @type {const} */ 'process.disk.io';

/**
 * The amount of physical memory in use.
 *
 * Instrument: updowncounter
 * Unit: By
 *
 * 
 *
 * 
 */
export const PROCESS_MEMORY_USAGE = /** @type {const} */ 'process.memory.usage';

/**
 * The amount of committed virtual memory.
 *
 * Instrument: updowncounter
 * Unit: By
 *
 * 
 *
 * 
 */
export const PROCESS_MEMORY_VIRTUAL = /** @type {const} */ 'process.memory.virtual';

/**
 * Network bytes transferred.
 *
 * Instrument: counter
 * Unit: By
 *
 * 
 *
 * 
 */
export const PROCESS_NETWORK_IO = /** @type {const} */ 'process.network.io';

/**
 * Number of file descriptors in use by the process.
 *
 * Instrument: updowncounter
 * Unit: {count}
 *
 * 
 *
 * 
 */
export const PROCESS_OPEN_FILE_DESCRIPTOR_COUNT = /** @type {const} */ 'process.open_file_descriptor.count';

/**
 * Number of page faults the process has made.
 *
 * Instrument: counter
 * Unit: {fault}
 *
 * 
 *
 * 
 */
export const PROCESS_PAGING_FAULTS = /** @type {const} */ 'process.paging.faults';

/**
 * Process threads count.
 *
 * Instrument: updowncounter
 * Unit: {thread}
 *
 * 
 *
 * 
 */
export const PROCESS_THREAD_COUNT = /** @type {const} */ 'process.thread.count';

/**
 * The time the process has been running.
 *
 * Instrument: gauge
 * Unit: s
 *
 * 
 *
 * * @remarks Instrumentations SHOULD use a gauge with type `double` and measure uptime in seconds as a floating point number with the highest precision available.
The actual accuracy would depend on the instrumentation and operating system.

 *
 */
export const PROCESS_UPTIME = /** @type {const} */ 'process.uptime';
